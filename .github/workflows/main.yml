name: Build Illusion Kernel 5.4 for Beryllium

on:
  workflow_dispatch:

jobs:
  build:
    name: Build Kernel
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Kernel Source
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Clone Toolchains
        run: |
          git clone --depth=1 -b lineage-20.0 https://github.com/LineageOS/android_prebuilts_clang_kernel_linux-x86_clang-r416183b clang
          git clone --depth=1 -b lineage-19.1 https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_aarch64_aarch64-linux-android-4.9 aarch64
          git clone --depth=1 -b lineage-19.1 https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_arm_arm-linux-androideabi-4.9 arm

      - name: Setup Environment
        run: |
          echo "CLANG_PATH=$GITHUB_WORKSPACE/clang" >> $GITHUB_ENV
          echo "GCC64_PATH=$GITHUB_WORKSPACE/aarch64" >> $GITHUB_ENV
          echo "GCC32_PATH=$GITHUB_WORKSPACE/arm" >> $GITHUB_ENV
          echo "ARCH=arm64" >> $GITHUB_ENV
          echo "SUBARCH=arm64" >> $GITHUB_ENV
          echo "CROSS_COMPILE=$GITHUB_WORKSPACE/aarch64/bin/aarch64-linux-android-" >> $GITHUB_ENV
          echo "CROSS_COMPILE_ARM32=$GITHUB_WORKSPACE/arm/bin/arm-linux-androideabi-" >> $GITHUB_ENV
          echo "CLANG_TRIPLE=aarch64-linux-gnu-" >> $GITHUB_ENV

      - name: Build Kernel
        run: |
          make O=out beryllium_defconfig
          make -j$(nproc) O=out \
            ARCH=arm64 \
            CC=${{ env.CLANG_PATH }}/bin/clang \
            CLANG_TRIPLE=${{ env.CLANG_TRIPLE }} \
            CROSS_COMPILE=${{ env.CROSS_COMPILE }} \
            CROSS_COMPILE_ARM32=${{ env.CROSS_COMPILE_ARM32 }}

      - name: Upload Image.gz-dtb
        uses: actions/upload-artifact@v4
        with:
          name: Kernel-Image
          path: out/arch/arm64/boot/Image.gz-dtb


---
